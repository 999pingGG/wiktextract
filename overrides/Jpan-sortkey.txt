TITLE: Module:Jpan-sortkey
local export = {}
local u = mw.ustring.char
local UTF8_char = "[%z\1-\127\194-\244][\128-\191]*"

function export.makeSortKey(text, lang, sc)
	text = require("Module:ja").kata_to_hira(text)
	
	-- If the first character has dakuten, replace it with the corresponding character without dakuten and add an apostrophe to the end, e.g. がす > かす'
	text = text:gsub("^(" .. UTF8_char .. ")" .. u(0x3099) .. "(.*)", "%1%2'")
	-- Similar thing, but with handuken and two apostrophes, e.g. ぱす -> はす''
	text = text:gsub("^(" .. UTF8_char .. ")" .. u(0x309A) .. "(.*)", "%1%2''")
	
	-- Replace the long vowel mark with the vowel that it stands for
	if text:match("ー") then
		local from = {"([あぁかさたなはまやゃらわ])ー", "([いぃきしちにひみり])ー", "([うぅくすつぬふむゆゅる])ー", "([えぇけせてねへめれ])ー", "([おぉこそとのほもよょろ])ー"}
		local to = {"%1あ", "%1い", "%1う", "%1え", "%1お"}
		for i, v in ipairs(from) do
			text = mw.ustring.gsub(text, v, to[i])
		end
	end
	
	return require("Module:Hani-sortkey").makeSortKey(text, lang, sc)
end

return export
